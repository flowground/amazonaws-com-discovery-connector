{
    "title": "AWS Application Discovery Service",
    "description": "AWS Application Discovery Service AWS Application Discovery Service helps you\nplan application migration projects by automatically identifying servers,\nvirtual machines (VMs), software, and software dependencies running in your\non-premises data centers. Application Discovery Service also collects\napplication performance data, which can help you assess the outcome of your\nmigration. The data collected by Application Discovery Service is securely\nretained in an AWS-hosted and managed database in the cloud. You can export the\ndata as a CSV or XML file into your preferred visualization tool or\ncloud-migration solution to plan your migration. For more information, see AWS\nApplication Discovery Service FAQ\n[http://aws.amazon.com/application-discovery/faqs/].\n\nApplication Discovery Service offers two modes of operation:\n\n *   Agentless discovery mode is recommended for environments that use VMware\n   vCenter Server. This mode doesn't require you to install an agent on each\n   host. Agentless discovery gathers server information regardless of the\n   operating systems, which minimizes the time required for initial on-premises\n   infrastructure assessment. Agentless discovery doesn't collect information\n   about software and software dependencies. It also doesn't work in non-VMware\n   environments. \n   \n   \n *   Agent-based discovery mode collects a richer set of data than agentless\n   discovery by using the AWS Application Discovery Agent, which you install on\n   one or more hosts in your data center. The agent captures infrastructure and\n   application information, including an inventory of installed software\n   applications, system and process performance, resource utilization, and\n   network dependencies between workloads. The information collected by agents\n   is secured at rest and in transit to the Application Discovery Service\n   database in the cloud. \n   \n   \n\nWe recommend that you use agent-based discovery for non-VMware environments and\nto collect information about software and software dependencies. You can also\nrun agent-based and agentless discovery simultaneously. Use agentless discovery\nto quickly complete the initial infrastructure assessment and then install\nagents on select hosts.\n\nApplication Discovery Service integrates with application discovery solutions\nfrom AWS Partner Network (APN) partners. Third-party application discovery tools\ncan query Application Discovery Service and write to the Application Discovery\nService database using a public API. You can then import the data into either a\nvisualization tool or cloud-migration solution.\n\nApplication Discovery Service doesn't gather sensitive information. All data is\nhandled according to the AWS Privacy Policy [http://aws.amazon.com/privacy/].\nYou can operate Application Discovery Service offline to inspect collected data\nbefore it is shared with the service.\n\nThis API reference provides descriptions, syntax, and usage examples for each of\nthe actions and data types for Application Discovery Service. The topic for each\naction shows the API request parameters and the response. Alternatively, you can\nuse one of the AWS SDKs to access an API that is tailored to the programming\nlanguage or platform that you're using. For more information, see AWS SDKs\n[http://aws.amazon.com/tools/#SDKs].\n\nThis guide is intended for use with the AWS Application Discovery Service User\nGuide [http://docs.aws.amazon.com/application-discovery/latest/userguide/].",
    "docsUrl": "https://aws.amazon.com/discovery/",
    "url": "https://api.apis.guru/v2/specs/amazonaws.com/discovery/2015-11-01/swagger.json",
    "envVars": {},
    "credentials": {
        "fields": {
            "server": {
                "label": "Server",
                "viewClass": "SelectView",
                "model": [
                    "https://discovery.amazonaws.com/",
                    "http://discovery.amazonaws.com/",
                    "--- Custom URL"
                ],
                "required": true
            },
            "otherServer": {
                "label": "Custom Server URL",
                "viewClass": "TextFieldView"
            },
            "auth_hmac": {
                "label": "Authorization (hmac)",
                "viewClass": "TextFieldView",
                "note": "Amazon Signature authorization v4"
            }
        }
    },
    "triggers": {
        "startFlow": {
            "main": "./lib/triggers/startFlow.js",
            "type": "polling",
            "title": "Start Flow",
            "fields": {}
        }
    },
    "actions": {
        "AssociateConfigurationItemsToApplication": {
            "main": "./lib/actions/AssociateConfigurationItemsToApplication.js",
            "title": "AssociateConfigurationItemsToApplication",
            "description": "Associates one or more configuration items with an application.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AssociateConfigurationItemsToApplication.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "BatchDeleteImportData": {
            "main": "./lib/actions/BatchDeleteImportData.js",
            "title": "BatchDeleteImportData",
            "description": "Deletes one or more import tasks, each identified by their import ID. Each\nimport task has a number of records that can identify servers or applications. \n\nAWS Application Discovery Service has built-in matching logic that will identify\nwhen discovered servers match existing entries that you've previously\ndiscovered, the information for the already-existing discovered server is\nupdated. When you delete an import task that contains records that were used to\nmatch, the information in those matched records that comes from the deleted\nrecords will also be deleted.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/BatchDeleteImportData.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreateApplication": {
            "main": "./lib/actions/CreateApplication.js",
            "title": "CreateApplication",
            "description": "Creates an application with the given name and description.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateApplication.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreateTags": {
            "main": "./lib/actions/CreateTags.js",
            "title": "CreateTags",
            "description": "Creates one or more tags for configuration items. Tags are metadata that help you categorize IT assets. This API accepts a list of multiple configuration items.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateTags.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteApplications": {
            "main": "./lib/actions/DeleteApplications.js",
            "title": "DeleteApplications",
            "description": "Deletes a list of applications and their associations with configuration items.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteApplications.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteTags": {
            "main": "./lib/actions/DeleteTags.js",
            "title": "DeleteTags",
            "description": "Deletes the association between configuration items and one or more tags. This API accepts a list of multiple configuration items.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteTags.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeAgents": {
            "main": "./lib/actions/DescribeAgents.js",
            "title": "DescribeAgents",
            "description": "Lists agents or connectors as specified by ID or other filters. All agents/connectors associated with your user account can be listed if you call <code>DescribeAgents</code> as is without passing any parameters.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeAgents.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeConfigurations": {
            "main": "./lib/actions/DescribeConfigurations.js",
            "title": "DescribeConfigurations",
            "description": "Retrieves attributes for a list of configuration item IDs.\n\nAll of the supplied IDs must be for the same asset type from one of the\nfollowing:\n\n *  server\n   \n   \n *  application\n   \n   \n *  process\n   \n   \n *  connection\n   \n   \n\nOutput fields are specific to the asset type specified. For example, the output\nfor a server configuration item includes a list of attributes about the server,\nsuch as host name, operating system, number of network cards, etc.\n\nFor a complete list of outputs for each asset type, see Using the\nDescribeConfigurations Action\n[http://docs.aws.amazon.com/application-discovery/latest/APIReference/discovery-api-queries.html#DescribeConfigurations]\n.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeConfigurations.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeContinuousExports": {
            "main": "./lib/actions/DescribeContinuousExports.js",
            "title": "DescribeContinuousExports",
            "description": "Lists exports as specified by ID. All continuous exports associated with your user account can be listed if you call <code>DescribeContinuousExports</code> as is without passing any parameters.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeContinuousExports.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeExportConfigurations": {
            "main": "./lib/actions/DescribeExportConfigurations.js",
            "title": "DescribeExportConfigurations",
            "description": " <code>DescribeExportConfigurations</code> is deprecated. Use <a href=\"https://docs.aws.amazon.com/application-discovery/latest/APIReference/API_DescribeExportTasks.html\">DescribeImportTasks</a>, instead.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeExportConfigurations.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeExportTasks": {
            "main": "./lib/actions/DescribeExportTasks.js",
            "title": "DescribeExportTasks",
            "description": "Retrieve status of one or more export tasks. You can retrieve the status of up to 100 export tasks.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeExportTasks.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeImportTasks": {
            "main": "./lib/actions/DescribeImportTasks.js",
            "title": "DescribeImportTasks",
            "description": "Returns an array of import tasks for your account, including status information, times, IDs, the Amazon S3 Object URL for the import file, and more.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeImportTasks.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeTags": {
            "main": "./lib/actions/DescribeTags.js",
            "title": "DescribeTags",
            "description": "Retrieves a list of configuration items that have tags as specified by the\nkey-value pairs, name and value, passed to the optional parameter filters.\n\nThere are three valid tag filter names:\n\n *  tagKey\n   \n   \n *  tagValue\n   \n   \n *  configurationId\n   \n   \n\nAlso, all configuration items associated with your user account that have tags\ncan be listed if you call DescribeTags as is without passing any parameters.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeTags.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DisassociateConfigurationItemsFromApplication": {
            "main": "./lib/actions/DisassociateConfigurationItemsFromApplication.js",
            "title": "DisassociateConfigurationItemsFromApplication",
            "description": "Disassociates one or more configuration items from an application.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DisassociateConfigurationItemsFromApplication.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ExportConfigurations": {
            "main": "./lib/actions/ExportConfigurations.js",
            "title": "ExportConfigurations",
            "description": "Deprecated. Use StartExportTask instead.\n\nExports all discovered configuration data to an Amazon S3 bucket or an\napplication that enables you to view and evaluate the data. Data includes tags\nand tag associations, processes, connections, servers, and system performance.\nThis API returns an export ID that you can query using the \nDescribeExportConfigurations API. The system imposes a limit of two\nconfiguration exports in six hours.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ExportConfigurations.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GetDiscoverySummary": {
            "main": "./lib/actions/GetDiscoverySummary.js",
            "title": "GetDiscoverySummary",
            "description": "Retrieves a short summary of discovered assets.\n\nThis API operation takes no request parameters and is called as is at the\ncommand prompt as shown in the example.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetDiscoverySummary.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListConfigurations": {
            "main": "./lib/actions/ListConfigurations.js",
            "title": "ListConfigurations",
            "description": "Retrieves a list of configuration items as specified by the value passed to the required paramater <code>configurationType</code>. Optional filtering may be applied to refine search results.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListConfigurations.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListServerNeighbors": {
            "main": "./lib/actions/ListServerNeighbors.js",
            "title": "ListServerNeighbors",
            "description": "Retrieves a list of servers that are one network hop away from a specified server.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListServerNeighbors.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "StartContinuousExport": {
            "main": "./lib/actions/StartContinuousExport.js",
            "title": "StartContinuousExport",
            "description": "Start the continuous flow of agent's discovered data into Amazon Athena.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/StartContinuousExport.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "StartDataCollectionByAgentIds": {
            "main": "./lib/actions/StartDataCollectionByAgentIds.js",
            "title": "StartDataCollectionByAgentIds",
            "description": "Instructs the specified agents or connectors to start collecting data.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/StartDataCollectionByAgentIds.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "StartExportTask": {
            "main": "./lib/actions/StartExportTask.js",
            "title": "StartExportTask",
            "description": " Begins the export of discovered data to an S3 bucket.\n\n If you specify agentIds in a filter, the task exports up to 72 hours of\ndetailed data collected by the identified Application Discovery Agent, including\nnetwork, process, and performance details. A time range for exported agent data\nmay be set by using startTime and endTime. Export of detailed agent data is\nlimited to five concurrently running exports. \n\n If you do not include an agentIds filter, summary data is exported that\nincludes both AWS Agentless Discovery Connector data and summary data from AWS\nDiscovery Agents. Export of summary data is limited to two exports per day.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/StartExportTask.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "StartImportTask": {
            "main": "./lib/actions/StartImportTask.js",
            "title": "StartImportTask",
            "description": "Starts an import task, which allows you to import details of your on-premises\nenvironment directly into AWS without having to use the Application Discovery\nService (ADS) tools such as the Discovery Connector or Discovery Agent. This\ngives you the option to perform migration assessment and planning directly from\nyour imported data, including the ability to group your devices as applications\nand track their migration status.\n\nTo start an import request, do this:\n\n 1.  Download the specially formatted comma separated value (CSV) import\n    template, which you can find here: \n    https://s3-us-west-2.amazonaws.com/templates-7cffcf56-bd96-4b1c-b45b-a5b42f282e46/import_template.csv\n    [https://s3-us-west-2.amazonaws.com/templates-7cffcf56-bd96-4b1c-b45b-a5b42f282e46/import_template.csv]\n    .\n    \n    \n 2.  Fill out the template with your server and application data.\n    \n    \n 3.  Upload your import file to an Amazon S3 bucket, and make a note of it's\n    Object URL. Your import file must be in the CSV format.\n    \n    \n 4.  Use the console or the StartImportTask command with the AWS CLI or one of\n    the AWS SDKs to import the records from your file.\n    \n    \n\nFor more information, including step-by-step procedures, see Migration Hub\nImport\n[https://docs.aws.amazon.com/application-discovery/latest/userguide/discovery-import.html] \nin the AWS Application Discovery Service User Guide.\n\nThere are limits to the number of import tasks you can create (and delete) in an\nAWS account. For more information, see AWS Application Discovery Service Limits\n[https://docs.aws.amazon.com/application-discovery/latest/userguide/ads_service_limits.html] \nin the AWS Application Discovery Service User Guide.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/StartImportTask.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "StopContinuousExport": {
            "main": "./lib/actions/StopContinuousExport.js",
            "title": "StopContinuousExport",
            "description": "Stop the continuous flow of agent's discovered data into Amazon Athena.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/StopContinuousExport.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "StopDataCollectionByAgentIds": {
            "main": "./lib/actions/StopDataCollectionByAgentIds.js",
            "title": "StopDataCollectionByAgentIds",
            "description": "Instructs the specified agents or connectors to stop collecting data.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/StopDataCollectionByAgentIds.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "UpdateApplication": {
            "main": "./lib/actions/UpdateApplication.js",
            "title": "UpdateApplication",
            "description": "Updates metadata about an application.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/UpdateApplication.in.json",
                "out": {
                    "type": "object"
                }
            }
        }
    }
}